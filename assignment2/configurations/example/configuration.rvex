
# This file configures your r-VEX platform. The platform may contain one or
# more individually configurable cores. This example file only contains one. To
# instantiate more cores, simply make more [core] tags with all of the
# configuration parameters underneath it.

###############################################################################
[core]
###############################################################################

# Space separated list of benchmarks that should be run on this core. The
# benchmarks are executed sequentially from the start of the list to the end.
BENCHMARKS = blit

# Issue width and multiplier unit configuration. Each digit represents a lane,
# starting with lane 0. A zero means that no multiplier exists in the given
# lane, a one means that there is. The total number of digits must be 2, 4, or
# 8, to select the issue width. The branch unit is always instantiated in the
# last lane, the memory unit is always instantiated in the first lane.
CONFIG = 1111

# Instruction cache size in bytes. This must be a power of two, and must be at
# least the issue width times 8. Append a k to specify the value in kiB.
ICACHE = 16k

# Data cache size in bytes. This must be a power of two, and must be at least
# 8. Append a k to specify the value in kiB.
DCACHE = 4k

# Stop bit configuration. This value must be 2, 4, or 8, and must be less than
# the issue width. The number of syllables in a bundle must be an integer
# multiple of this value. That is, if there is not enough instruction-level
# parallelism, NOP syllables must be appended to the bundle to meet the
# constraint. These "horizontal NOPs" do not slow the program down directly (as
# the NOPs are executed in parallel to useful instructions), but they do
# increase the size of the executable and thus affect instruction cache
# behavior. Thus, for speed, you want this number as low as possible. The cost
# is area.
STOPBIT = 4

